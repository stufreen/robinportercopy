---
import rawStylesCSS from '@vime/core/themes/default.css';

const { media, externalMediaUrls } = Astro.props;

const youtubeParser = (url) => {
  const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
  const match = url.match(regExp);
  return (match&&match[7].length==11)? match[7] : false;
};

const vimeoParser = (url) => {
  const regExp = /^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/;
  const parseUrl = regExp.exec(url);
  return parseUrl[5];
}
---
<script>
  import {defineCustomElements} from '@vime/core';

  defineCustomElements();
</script>

<style is:inline set:html={rawStylesCSS}></style>

<p>Media</p>
<pre>{JSON.stringify(media, null, 2)}</pre>

<p>External</p>
<pre>{JSON.stringify(externalMediaUrls, null, 2)}</pre>

{externalMediaUrls.map((externalMediaUrl) => {
  if (externalMediaUrl.includes('youtube.com') || externalMediaUrl.includes('youtu.be')) {
    const videoId = youtubeParser(externalMediaUrl);
    return (
      <div style="video-player-wrapper">
        <vm-player playsinline>
          <vm-youtube video-id={videoId} />
          <vm-default-ui></vm-default-ui>
        </vm-player>
      </div>
    )
  } 
  else if (externalMediaUrl.includes('vimeo.com')) {
    const videoId = vimeoParser(externalMediaUrl);
    return (
      <div class="video-player-wrapper">
        <vm-player playsinline>
          <vm-vimeo video-id={videoId}></vm-vimeo>
          <vm-default-ui></vm-default-ui>
        </vm-player>
      </div>
    );
  }
})}
