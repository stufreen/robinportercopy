---
import rawStylesCSS from "@vime/core/themes/default.css";

const { url } = Astro.props;

const youtubeParser = (url) => {
  const regExp =
    /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;
  const match = url.match(regExp);
  return match && match[7].length == 11 ? match[7] : false;
};

const vimeoParser = (url) => {
  const regExp =
    /^.*(vimeo\.com\/)((channels\/[A-z]+\/)|(groups\/[A-z]+\/videos\/))?([0-9]+)/;
  const parseUrl = regExp.exec(url);
  return parseUrl[5];
};

const { service, videoId } = (() => {
  if (url.includes("youtube.com") || url.includes("youtu.be")) {
    const videoId = youtubeParser(url);
    return {
      service: "youtube",
      videoId,
    };
  } else if (url.includes("vimeo.com")) {
    const videoId = vimeoParser(url);
    return {
      service: "vimeo",
      videoId,
    };
  }
})();
---

<script>
  import { defineCustomElements } from "@vime/core";

  defineCustomElements();
</script>

<style is:inline set:html={rawStylesCSS}>

</style>

<style>
  .video-player-wrapper {
    width: 300px;
    height: 300px;
  }
</style>

<div class="video-player-wrapper">
  {
    service === "youtube" && (
      <vm-player playsinline aspectRatio="16:9">
        <vm-youtube video-id={videoId} />
        <vm-default-ui />
      </vm-player>
    )
  }
  {
    service === "vimeo" && (
      <vm-player playsinline aspectRatio="16:9">
        <vm-vimeo video-id={videoId} noAutoAspectRatio />
        <vm-default-ui />
      </vm-player>
    )
  }
</div>
